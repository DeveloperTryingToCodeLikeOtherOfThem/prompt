{"entries":[{"timestamp":1755570663059,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":131,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":1,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":2,"length1":22,"diffs":[[1,"    \"name\": \"settings\",\n"]]},{"start1":71,"length1":125,"diffs":[[1,"        \"device\": \"*\"\n"]]},{"start1":178,"length1":43,"diffs":[[1,"        \"assets.json\"\n"]]},{"start1":207,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"prompt.ts","value":"namespace game.prompt{}"}]},{"timestamp":1755571261678,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"prompt.ts","patch":[{"start1":0,"length1":2155,"diffs":[[1,"namespace game.prompt{}"]]}]}]},{"timestamp":1755571812934,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"prompt.ts","patch":[{"start1":1,"length1":1,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":59,"length1":1,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":97,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":139,"length1":1,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":189,"length1":1,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":226,"length1":1,"diffs":[[1,""]]},{"start1":249,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":317,"length1":1,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":387,"length1":1,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":484,"length1":25,"diffs":[[1,"//% whenUsed=true\nconst CELL_WIDTH = Math.floor(CONTENT_WIDTH / ALPHABET_ROW_LENGTH);\n//% whenUsed=true\n"]]},{"start1":620,"length1":1,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":709,"length1":1,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":800,"length1":1,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":843,"length1":0,"diffs":[[1,"//% whenUsed=true\nconst ROW_LEFT = PADDING + Math.floor((CONTENT_WIDTH - (CELL_WIDTH * ALPHABET_ROW_LENGTH)) / 2);\n"]]},{"start1":959,"length1":20,"diffs":[[1,""]]},{"start1":991,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1047,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1143,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1227,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1314,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1411,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1510,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1632,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1698,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1741,"length1":0,"diffs":[[1,"//% whenUsed=true\n\n"]]},{"start1":1837,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1880,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1921,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":1969,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":2017,"length1":0,"diffs":[[1,"//% whenUsed=true\n"]]},{"start1":2108,"length1":2,"diffs":[[1,"    //% whenUsed=true\nconsole.log(ALPHABET_TOP)"]]}]}]},{"timestamp":1755572403595,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":302,"length1":74,"diffs":[[1,"        \"prompt.ts\"\n"]]}]},{"type":"edited","filename":"prompt.ts","patch":[{"start1":1,"length1":39,"diffs":[[1,""]]},{"start1":2,"length1":67,"diffs":[[1,"const font = image.font8; // FONT8-TODO\n"]]},{"start1":43,"length1":180,"diffs":[[1,"const PADDING = 4;\n"]]},{"start1":63,"length1":118,"diffs":[[1,"const NUM_LETTERS = 26;\n"]]},{"start1":88,"length1":75,"diffs":[[1,"const ALPHABET_ROW_LENGTH = 12;\n"]]},{"start1":121,"length1":28,"diffs":[[1,"const NUM_ROWS = 3\n"]]},{"start1":141,"length1":763,"diffs":[[1,"const INPUT_ROWS = 2;\n"]]},{"start1":164,"length1":153,"diffs":[[1,"const CONTENT_WIDTH = screen.width - PADDING * 2;\n"]]},{"start1":215,"length1":74,"diffs":[[1,"const CONTENT_HEIGHT = screen.height - PADDING * 2;\n"]]},{"start1":268,"length1":70,"diffs":[[1,"const CONTENT_TOP = PADDING;\n"]]},{"start1":298,"length1":460,"diffs":[[1,"// Dimensions of a \"cell\" that contains a letter\n"]]},{"start1":348,"length1":50,"diffs":[[1,"const CELL_WIDTH = 12;\n"]]},{"start1":372,"length1":167,"diffs":[[1,"const CELL_HEIGHT = CELL_WIDTH;\n"]]},{"start1":405,"length1":69,"diffs":[[1,"const LETTER_OFFSET_X = Math.floor((CELL_WIDTH - font.charWidth) / 2);\n"]]},{"start1":477,"length1":113,"diffs":[[1,"const LETTER_OFFSET_Y = Math.floor((CELL_HEIGHT - font.charHeight) / 2);\n"]]},{"start1":551,"length1":111,"diffs":[[1,"const BLANK_PADDING = 1;\n"]]},{"start1":577,"length1":53,"diffs":[[1,"const ROW_LEFT = 8;\n// Dimensions of the bottom bar\nconst BOTTOM_BAR_ALPHABET_MARGIN = 4;\nconst BOTTOM_BAR_HEIGHT = PADDING + BOTTOM_BAR_ALPHABET_MARGIN + CELL_HEIGHT;\nconst BOTTOM_BAR_BUTTON_WIDTH = PADDING * 2 + font.charWidth * 3;\nconst BOTTOM_BAR_TEXT_Y = (BOTTOM_BAR_HEIGHT - font.charHeight) / 2;\nconst BOTTOM_BAR_SHIFT_X = (BOTTOM_BAR_BUTTON_WIDTH - font.charWidth * 3) / 2;\nconst BOTTOM_BAR_CONFIRM_X = (BOTTOM_BAR_BUTTON_WIDTH - font.charWidth * 2) / 2;\nconst CONFIRM_BUTTON_LEFT = screen.width - BOTTOM_BAR_BUTTON_WIDTH;\n"]]},{"start1":1109,"length1":469,"diffs":[[1,"// Dimensions of the alphabet area\nconst ALPHABET_HEIGHT = NUM_ROWS * CELL_HEIGHT;\nconst ALPHABET_TOP = 60;\nconst ALPHABET_INPUT_MARGIN = 10;\n"]]},{"start1":1252,"length1":73,"diffs":[[1,"// Dimensions of area where text is input\nconst INPUT_HEIGHT = 24;\nconst INPUT_TOP = 26;\n"]]},{"start1":1342,"length1":34,"diffs":[[1,"const lowerShiftText = \"ABC\";\nconst upperShiftText = \"abc\";\nconst digitsUpper = [\" \", \",\", \".\", \"?\", \"!\", \":\", \";\", \"\\\"\", \"(\", \")\"];\n"]]},{"start1":1476,"length1":58,"diffs":[[1,""]]},{"start1":1477,"length1":9296,"diffs":[[1,""]]}]},{"type":"added","filename":"baseLogic.ts","value":"\n\nconst font = image.font8; // FONT8-TODO\n\nconst PADDING = 4;\nconst NUM_LETTERS = 26;\nconst ALPHABET_ROW_LENGTH = 12;\nconst NUM_ROWS = 3\nconst INPUT_ROWS = 2;\nconst CONTENT_WIDTH = 152;\nconst CONTENT_HEIGHT = 112;\nconst CONTENT_TOP = PADDING;\n\n// Dimensions of a \"cell\" that contains a letter\nconst CELL_WIDTH = 12;\nconst CELL_HEIGHT = CELL_WIDTH;\nconst LETTER_OFFSET_X = 3;\nconst LETTER_OFFSET_Y = 2;\nconst BLANK_PADDING = 1;\nconst ROW_LEFT = 8;\n\n// Dimensions of the bottom bar\nconst BOTTOM_BAR_ALPHABET_MARGIN = 4;\nconst BOTTOM_BAR_HEIGHT = 20;\nconst BOTTOM_BAR_BUTTON_WIDTH = 26;\nconst BOTTOM_BAR_TEXT_Y = 6;\nconst BOTTOM_BAR_SHIFT_X = 4;\nconst BOTTOM_BAR_CONFIRM_X = 7;\nconst CONFIRM_BUTTON_LEFT = 134\n\n// Dimensions of the alphabet area\nconst ALPHABET_HEIGHT = NUM_ROWS * CELL_HEIGHT;\nconst ALPHABET_TOP = 60;\nconst ALPHABET_INPUT_MARGIN = 10;\n\n// Dimensions of area where text is input\nconst INPUT_HEIGHT = 24;\nconst INPUT_TOP = 26;\n\nconst lowerShiftText = \"ABC\";\nconst upperShiftText = \"abc\";\nconst digitsUpper = [\" \", \",\", \".\", \"?\", \"!\", \":\", \";\", \"\\\"\", \"(\", \")\"];\nconst confirmText = \"OK\";"},{"type":"added","filename":"interfaceAndIDs.ts","value":"interface PromptTheme {\n    colorPrompt: number;\n    colorInput: number;\n    colorInputHighlighted: number;\n    colorInputText: number;\n    colorAlphabet: number;\n    colorCursor: number;\n    colorBackground: number;\n    colorBottomBackground: number;\n    colorBottomText: number;\n}\n\n const _KEYBOARD_CHANGE_EVENT = 7339;\n const _KEYBOARD_ENTER_EVENT = 7340;\n const _KEYBOARD_CANCEL_EVENT = 7341;"}]},{"timestamp":1755573065338,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":347,"length1":66,"diffs":[[1,"        \"interfaceAndIDs.ts\"\n"]]}]},{"type":"added","filename":"aksUserForInputMatches.ts","value":""}]},{"timestamp":1755573709873,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"aksUserForInputMatches.ts","patch":[{"start1":0,"length1":22,"diffs":[[1,""]]}]}]},{"timestamp":1755573709889,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":1046,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":71,"diffs":[[1,"\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":377,"length1":53,"diffs":[[1,"        \"aksUserForInputMatches.ts\"\n"]]},{"start1":420,"length1":44,"diffs":[[1,""]]}]},{"type":"edited","filename":"aksUserForInputMatches.ts","patch":[{"start1":0,"length1":875,"diffs":[[1,"// Add your code here\n"]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"ns.ts","value":"// Add your code here\nnamespace prompt {\n    \n}"}]}],"snapshots":[{"timestamp":1755570663058,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>","main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"settings\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1755572465584,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"\n","README.md":" ","assets.json":"","prompt.ts":"\n\nconst font = image.font8; // FONT8-TODO\n\nconst PADDING = 4;\nconst NUM_LETTERS = 26;\nconst ALPHABET_ROW_LENGTH = 12;\nconst NUM_ROWS = 3\nconst INPUT_ROWS = 2;\nconst CONTENT_WIDTH = screen.width - PADDING * 2;\nconst CONTENT_HEIGHT = screen.height - PADDING * 2;\nconst CONTENT_TOP = PADDING;\n\n// Dimensions of a \"cell\" that contains a letter\nconst CELL_WIDTH = 12;\nconst CELL_HEIGHT = CELL_WIDTH;\nconst LETTER_OFFSET_X = Math.floor((CELL_WIDTH - font.charWidth) / 2);\nconst LETTER_OFFSET_Y = Math.floor((CELL_HEIGHT - font.charHeight) / 2);\nconst BLANK_PADDING = 1;\nconst ROW_LEFT = 8;\nconsole.log(2,2)\n// Dimensions of the bottom bar\nconst BOTTOM_BAR_ALPHABET_MARGIN = 4;\nconst BOTTOM_BAR_HEIGHT = PADDING + BOTTOM_BAR_ALPHABET_MARGIN + CELL_HEIGHT;\nconst BOTTOM_BAR_BUTTON_WIDTH = PADDING * 2 + font.charWidth * 3;\nconst BOTTOM_BAR_TEXT_Y = (BOTTOM_BAR_HEIGHT - font.charHeight) / 2;\nconst BOTTOM_BAR_SHIFT_X = (BOTTOM_BAR_BUTTON_WIDTH - font.charWidth * 3) / 2;\nconst BOTTOM_BAR_CONFIRM_X = (BOTTOM_BAR_BUTTON_WIDTH - font.charWidth * 2) / 2;\nconst CONFIRM_BUTTON_LEFT = screen.width - BOTTOM_BAR_BUTTON_WIDTH;\n\n// Dimensions of the alphabet area\nconst ALPHABET_HEIGHT = NUM_ROWS * CELL_HEIGHT;\nconst ALPHABET_TOP = 60;\nconst ALPHABET_INPUT_MARGIN = 10;\n\n// Dimensions of area where text is input\nconst INPUT_HEIGHT = 24;\nconst INPUT_TOP = 26;\n\nconst lowerShiftText = \"ABC\";\nconst upperShiftText = \"abc\";\nconst digitsUpper = [\" \", \",\", \".\", \"?\", \"!\", \":\", \";\", \"\\\"\", \"(\", \")\"];\n\n\n","pxt.json":"{\n    \"name\": \"prompt\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"pxt-arcade-image-transform\": \"github:robo-technical-group/pxt-arcade-image-transform#v1.0.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"prompt.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1755574107189}